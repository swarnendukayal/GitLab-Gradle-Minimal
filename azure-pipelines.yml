# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- task: ArtifactoryGradle@1
  inputs:
    gradleBuildFile: 'build.gradle'
    tasks: 'artifactoryPublish'
    artifactoryResolverService: 'art-gaja'
    sourceRepo: 'libs-release'
    artifactoryDeployerService: 'art-gaja'
    targetRepo: 'libs-release'
    usesPlugin: true
    useWrapper: true
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: ArtifactoryPublishBuildInfo@1
  inputs:
    artifactoryService: 'art-gaja'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'

- task: ArtifactoryXrayScan@1
  inputs:
    artifactoryService: 'art-gaja'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    allowFailBuild: true

- task: ArtifactoryBuildPromotion@1
  inputs:
    artifactoryService: 'art-gaja'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    targetRepo: 'libs-release'
    status: 'Released'
    sourceRepo: 'libs-release-local'
    includeDependencies: true
    copy: false
    dryRun: false

- task: ArtifactoryXrayScan@1
  inputs:
    artifactoryService: 'art-gaja'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    allowFailBuild: true